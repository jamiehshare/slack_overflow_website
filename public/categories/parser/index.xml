<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>ParseR on Slack Overflow tips &amp; tricks</title>
    <link>https://slack-overflow-help.netlify.app/categories/parser/</link>
    <description>Recent content in ParseR on Slack Overflow tips &amp; tricks</description>
    <image>
      <url>https://slack-overflow-help.netlify.app/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://slack-overflow-help.netlify.app/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Tue, 28 Jun 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://slack-overflow-help.netlify.app/categories/parser/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Updating Packages</title>
      <link>https://slack-overflow-help.netlify.app/post/2022-06-28-update-packages/update_packages/</link>
      <pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://slack-overflow-help.netlify.app/post/2022-06-28-update-packages/update_packages/</guid>
      <description>Topic originally suggested by Mike Tapp, Data Diretor The Problem Sometimes we need to update our packages, perhaps new functions have been added, patches have been included to fix bugs.
We can update packages in a few ways:
Using R script If we know a specific package that needs to be updated, we can run the code:
install.packages(&amp;quot;PACKAGE_NAME&amp;quot;) So for example:
install.packages(&amp;quot;ggplot2&amp;quot;) Note the quotation marks surrounding the package name</description>
    </item>
    
    <item>
      <title>Extracting and filtering for subreddits</title>
      <link>https://slack-overflow-help.netlify.app/post/2022-06-10-subreddit_extraction/subreddit_extraction/</link>
      <pubDate>Fri, 10 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://slack-overflow-help.netlify.app/post/2022-06-10-subreddit_extraction/subreddit_extraction/</guid>
      <description>Topic originally suggested by Jack Penzer, Data Scientist The problem Sometimes we might receive data from a social listening output and we want to be able to filter for subreddits of interest.
For this tutorial, let’s say we have a dataset in R called data, that looks like the following:
head(data) ## # A tibble: 6 × 14 ## project_id date author mention_content ave_sentiment sentiment ## &amp;lt;int&amp;gt; &amp;lt;date&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; ## 1 1 2022-04-27 Instagram User love airpods co… 0.</description>
    </item>
    
  </channel>
</rss>
