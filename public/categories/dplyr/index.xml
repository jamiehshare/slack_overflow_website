<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>dplyr on Slack Overflow tips &amp; tricks</title>
    <link>https://slack-overflow-help.netlify.app/categories/dplyr/</link>
    <description>Recent content in dplyr on Slack Overflow tips &amp; tricks</description>
    <image>
      <url>https://slack-overflow-help.netlify.app/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://slack-overflow-help.netlify.app/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Fri, 10 Jun 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://slack-overflow-help.netlify.app/categories/dplyr/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Combine data frames with new column</title>
      <link>https://slack-overflow-help.netlify.app/post/2022-06-10-combine_dfs_with_new_col/gdata_combine/</link>
      <pubDate>Fri, 10 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://slack-overflow-help.netlify.app/post/2022-06-10-combine_dfs_with_new_col/gdata_combine/</guid>
      <description>Answer originally provided by Jack Penzer &amp;amp; Jamie Hudson, Data Scientists The Problem Sometimes we have multiple data frames containing the same variables but for different companies, for example. We might then want to be able to join these data frames together, creating a new variable (column) that corresponds to the name of the original data frame.
In this example, we are going to use three dummy data frames called amazon, microsoft, and google, which contain the columns message_id, message, and author- though the solutions provided would work even if the data frames had many more columns.</description>
    </item>
    
    <item>
      <title>Extracting and filtering for subreddits</title>
      <link>https://slack-overflow-help.netlify.app/post/2022-06-10-subreddit_extraction/subreddit_extraction/</link>
      <pubDate>Fri, 10 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://slack-overflow-help.netlify.app/post/2022-06-10-subreddit_extraction/subreddit_extraction/</guid>
      <description>Topic originally suggested by Jack Penzer, Data Scientist The problem Sometimes we might receive data from a social listening output and we want to be able to filter for subreddits of interest.
For this tutorial, let’s say we have a dataset in R called data, that looks like the following:
head(data) ## # A tibble: 6 × 14 ## project_id date author mention_content ave_sentiment sentiment ## &amp;lt;int&amp;gt; &amp;lt;date&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; ## 1 1 2022-04-27 Instagram User love airpods co… 0.</description>
    </item>
    
  </channel>
</rss>
